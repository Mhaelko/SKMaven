<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="1" passed="0" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2020-11-24T18:29:31Z" name="Base Suite" finished-at="2020-11-24T18:30:59Z" duration-ms="88127">
    <groups>
    </groups>
    <test started-at="2020-11-24T18:29:31Z" name="Market Tests" finished-at="2020-11-24T18:30:59Z" duration-ms="88127">
      <class name="market.selenide.MerchantsRegistrationTests">
        <test-method is-config="true" signature="setUp(java.lang.String, java.lang.String)[pri:0, instance:market.selenide.MerchantsRegistrationTests@62e93c3a]" started-at="2020-11-24T18:29:31Z" name="setUp" finished-at="2020-11-24T18:29:35Z" duration-ms="3898" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[less]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:market.selenide.MerchantsRegistrationTests@62e93c3a]" started-at="2020-11-24T18:29:35Z" name="setUp" finished-at="2020-11-24T18:29:35Z" duration-ms="17" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="fillMerchantRequest()[pri:0, instance:market.selenide.MerchantsRegistrationTests@62e93c3a]" started-at="2020-11-24T18:29:35Z" name="fillMerchantRequest" finished-at="2020-11-24T18:30:59Z" duration-ms="83808" status="FAIL">
          <exception class="org.openqa.selenium.TimeoutException">
            <message>
              <![CDATA[timeout: Timed out receiving message from renderer: 10.000
  (Session info: chrome=87.0.4280.66)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'BUSINESS', ip: '192.168.3.8', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '11.0.5'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 87.0.4280.66, chrome: {chromedriverVersion: 87.0.4280.20 (c99e81631faa0..., userDataDir: C:\Users\msavenko\AppData\L...}, goog:chromeOptions: {debuggerAddress: localhost:65230}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true}
Session ID: 44aef98cbbb6f156cebdfc11a10406e5]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.TimeoutException: timeout: Timed out receiving message from renderer: 10.000
  (Session info: chrome=87.0.4280.66)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'BUSINESS', ip: '192.168.3.8', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '11.0.5'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 87.0.4280.66, chrome: {chromedriverVersion: 87.0.4280.20 (c99e81631faa0..., userDataDir: C:\Users\msavenko\AppData\L...}, goog:chromeOptions: {debuggerAddress: localhost:65230}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true}
Session ID: 44aef98cbbb6f156cebdfc11a10406e5
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:609)
at org.openqa.selenium.remote.RemoteWebDriver.getScreenshotAs(RemoteWebDriver.java:295)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.openqa.selenium.support.events.EventFiringWebDriver.lambda$new$1(EventFiringWebDriver.java:105)
at com.sun.proxy.$Proxy13.getScreenshotAs(Unknown Source)
at org.openqa.selenium.support.events.EventFiringWebDriver.getScreenshotAs(EventFiringWebDriver.java:302)
at Base.BaseTest.makeScreenshotPNG(BaseTest.java:83)
at Base.TestListener.onTestFailure(TestListener.java:21)
at org.testng.internal.TestListenerHelper.runTestListeners(TestListenerHelper.java:67)
at org.testng.internal.Invoker.runTestListeners(Invoker.java:1389)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:636)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:377)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:138)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:465)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:451)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.TimeoutException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- fillMerchantRequest -->
        <test-method is-config="true" signature="testStart(java.lang.reflect.Method, [Ljava.lang.Object;)[pri:0, instance:market.selenide.MerchantsRegistrationTests@62e93c3a]" started-at="2020-11-24T18:29:35Z" name="testStart" finished-at="2020-11-24T18:29:35Z" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void market.selenide.MerchantsRegistrationTests.fillMerchantRequest()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.Object;@3b7b0b57]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testStart -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:market.selenide.MerchantsRegistrationTests@62e93c3a]" started-at="2020-11-24T18:30:59Z" name="tearDown" finished-at="2020-11-24T18:30:59Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- market.selenide.MerchantsRegistrationTests -->
    </test> <!-- Market Tests -->
  </suite> <!-- Base Suite -->
</testng-results>
